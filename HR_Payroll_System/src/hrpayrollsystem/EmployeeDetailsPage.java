package hrpayrollsystem;

import java.awt.event.WindowEvent;
import java.rmi.RemoteException;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class EmployeeDetailsPage extends javax.swing.JFrame {

    private Interface hrInterface;
    private AdminPage adminPage;
    private Employee employee;
    private boolean isErrorShown = false;

    public EmployeeDetailsPage(Interface hrInterface, AdminPage adminPage, Employee employee) throws RemoteException {
        initComponents();
        Calendar calendar = Calendar.getInstance();
        int currentMonth = calendar.get(Calendar.MONTH) + 1;
        this.hrInterface = hrInterface;
        this.adminPage = adminPage;
        this.employee = employee;

        // Display personal information
        usernameTextField.setText(employee.getUsername());
        firstNameTextField.setText(employee.getFirstName());
        lastNameTextField.setText(employee.getLastName());
        icNumberTextField.setText(employee.getIcNumber());
        employeeIdTextField.setText(employee.getEmployeeId());
        jobPositionTextField.setText(employee.getJobPosition());
        emailTextField.setText(employee.getEmail());
        ageTextField.setText(Integer.toString(employee.getAge()));

        // Display salary information
        allowanceTextField.setText(Double.toString(employee.getAllowance()));
        basicSalaryTextField.setText(Double.toString(employee.getBasicSalary()));
        grossSalaryText.setText(Double.toString(employee.getGrossSalary()));
        netSalaryText.setText(Double.toString(employee.getNetSalary()));;
        incomeTaxPercentageText.setText(Double.toString(employee.getIncomeTax()));

        // Display monthly deduction information
        deductionMonthComboBox.setSelectedIndex(currentMonth - 1);
        deductionTextField.setText(Double.toString(employee.getDeduction(currentMonth)));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        employeeDetailsLabel = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        personalInformationPanel = new javax.swing.JPanel();
        firstNameLabel = new javax.swing.JLabel();
        firstNameTextField = new javax.swing.JTextField();
        lastNameLabel = new javax.swing.JLabel();
        lastNameTextField = new javax.swing.JTextField();
        icNumberLabel = new javax.swing.JLabel();
        icNumberTextField = new javax.swing.JTextField();
        emailLabel = new javax.swing.JLabel();
        emailTextField = new javax.swing.JTextField();
        jobPositionTextField = new javax.swing.JTextField();
        jobPositionLabel = new javax.swing.JLabel();
        employeeIdTextField = new javax.swing.JTextField();
        employeeIdLabel = new javax.swing.JLabel();
        personalInformationLabel = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        usernameTextField = new javax.swing.JTextField();
        ageLabel = new javax.swing.JLabel();
        ageTextField = new javax.swing.JTextField();
        salaryInformationPanel = new javax.swing.JPanel();
        salaryInformationLabel = new javax.swing.JLabel();
        basicSalaryLabel = new javax.swing.JLabel();
        basicSalaryTextField = new javax.swing.JFormattedTextField();
        allowanceLabel = new javax.swing.JLabel();
        allowanceTextField = new javax.swing.JFormattedTextField();
        incomeTaxPercentageLabel = new javax.swing.JLabel();
        incomeTaxPercentageText = new javax.swing.JLabel();
        grossSalaryLabel = new javax.swing.JLabel();
        grossSalaryText = new javax.swing.JLabel();
        netSalaryLabel = new javax.swing.JLabel();
        netSalaryText = new javax.swing.JLabel();
        deductionMonthComboBox = new javax.swing.JComboBox<>();
        monthlyDeductionLabel = new javax.swing.JLabel();
        deductionTextField = new javax.swing.JTextField();

        jLabel7.setText("Allowance");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1076, 775));

        employeeDetailsLabel.setBackground(new java.awt.Color(255, 255, 255));
        employeeDetailsLabel.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        employeeDetailsLabel.setText("Employee Details");

        saveButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        cancelButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        personalInformationPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        firstNameLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        firstNameLabel.setText("First Name");

        firstNameTextField.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        firstNameTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                firstNameTextFieldFocusLost(evt);
            }
        });

        lastNameLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lastNameLabel.setText("Last Name");

        lastNameTextField.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lastNameTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                lastNameTextFieldFocusLost(evt);
            }
        });

        icNumberLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        icNumberLabel.setText("IC Number");

        icNumberTextField.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        icNumberTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                icNumberTextFieldFocusLost(evt);
            }
        });

        emailLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        emailLabel.setText("Email");

        emailTextField.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        emailTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                emailTextFieldFocusLost(evt);
            }
        });

        jobPositionTextField.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        jobPositionLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jobPositionLabel.setText("Job Position");

        employeeIdTextField.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        employeeIdTextField.setEnabled(false);

        employeeIdLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        employeeIdLabel.setText("Employee ID");

        personalInformationLabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        personalInformationLabel.setText("Personal Information");

        usernameLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        usernameLabel.setText("Username");

        usernameTextField.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        usernameTextField.setEnabled(false);

        ageLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        ageLabel.setText("Age");

        ageTextField.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        ageTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                ageTextFieldFocusLost(evt);
            }
        });

        javax.swing.GroupLayout personalInformationPanelLayout = new javax.swing.GroupLayout(personalInformationPanel);
        personalInformationPanel.setLayout(personalInformationPanelLayout);
        personalInformationPanelLayout.setHorizontalGroup(
            personalInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(personalInformationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(personalInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(personalInformationPanelLayout.createSequentialGroup()
                        .addComponent(personalInformationLabel)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(personalInformationPanelLayout.createSequentialGroup()
                        .addGroup(personalInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(icNumberLabel)
                            .addGroup(personalInformationPanelLayout.createSequentialGroup()
                                .addComponent(employeeIdLabel)
                                .addGap(18, 18, 18)
                                .addComponent(employeeIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(personalInformationPanelLayout.createSequentialGroup()
                                .addGroup(personalInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(usernameLabel, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(firstNameLabel, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(37, 37, 37)
                                .addGroup(personalInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(icNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                        .addGroup(personalInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(personalInformationPanelLayout.createSequentialGroup()
                                .addGroup(personalInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(emailLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lastNameLabel)
                                    .addComponent(jobPositionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(personalInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jobPositionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(personalInformationPanelLayout.createSequentialGroup()
                                .addComponent(ageLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(118, 118, 118))))
        );
        personalInformationPanelLayout.setVerticalGroup(
            personalInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(personalInformationPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(personalInformationLabel)
                .addGap(18, 18, 18)
                .addGroup(personalInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, personalInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ageLabel)
                        .addComponent(ageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(usernameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(personalInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameLabel)
                    .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastNameLabel)
                    .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(personalInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(emailLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(personalInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(icNumberLabel)
                        .addComponent(icNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(personalInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(employeeIdLabel)
                    .addComponent(employeeIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jobPositionLabel)
                    .addComponent(jobPositionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        salaryInformationPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        salaryInformationLabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        salaryInformationLabel.setText("Salary Information");

        basicSalaryLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        basicSalaryLabel.setText("Basic Salary");

        basicSalaryTextField.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        basicSalaryTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                basicSalaryTextFieldFocusLost(evt);
            }
        });

        allowanceLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        allowanceLabel.setText("Allowance");

        allowanceTextField.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        allowanceTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                allowanceTextFieldFocusLost(evt);
            }
        });

        incomeTaxPercentageLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        incomeTaxPercentageLabel.setText("Income Tax Percentage");

        incomeTaxPercentageText.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        incomeTaxPercentageText.setText("0%");

        grossSalaryLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        grossSalaryLabel.setText("Gross Salary");

        grossSalaryText.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        grossSalaryText.setText("0.00");

        netSalaryLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        netSalaryLabel.setText("Net Salary");

        netSalaryText.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        netSalaryText.setText("0.00");

        deductionMonthComboBox.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        deductionMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        deductionMonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deductionMonthComboBoxActionPerformed(evt);
            }
        });

        monthlyDeductionLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        monthlyDeductionLabel.setText("Monthly Deduction");

        deductionTextField.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        deductionTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                deductionTextFieldFocusLost(evt);
            }
        });

        javax.swing.GroupLayout salaryInformationPanelLayout = new javax.swing.GroupLayout(salaryInformationPanel);
        salaryInformationPanel.setLayout(salaryInformationPanelLayout);
        salaryInformationPanelLayout.setHorizontalGroup(
            salaryInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(salaryInformationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(salaryInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(salaryInformationPanelLayout.createSequentialGroup()
                        .addGroup(salaryInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(salaryInformationPanelLayout.createSequentialGroup()
                                .addGroup(salaryInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(netSalaryLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(grossSalaryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(salaryInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(netSalaryText, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(grossSalaryText, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(salaryInformationPanelLayout.createSequentialGroup()
                                .addGroup(salaryInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(allowanceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(basicSalaryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(salaryInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(basicSalaryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(allowanceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(40, 40, 40)
                        .addGroup(salaryInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(incomeTaxPercentageLabel)
                            .addComponent(monthlyDeductionLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(salaryInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(deductionMonthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(incomeTaxPercentageText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deductionTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE))
                    .addComponent(salaryInformationLabel))
                .addContainerGap())
        );
        salaryInformationPanelLayout.setVerticalGroup(
            salaryInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, salaryInformationPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(salaryInformationLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(salaryInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(salaryInformationPanelLayout.createSequentialGroup()
                        .addGroup(salaryInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(basicSalaryLabel)
                            .addComponent(basicSalaryTextField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(salaryInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(allowanceLabel)
                            .addComponent(allowanceTextField)))
                    .addGroup(salaryInformationPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(salaryInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(incomeTaxPercentageLabel)
                            .addComponent(incomeTaxPercentageText))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(salaryInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deductionMonthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(monthlyDeductionLabel)
                            .addComponent(deductionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(salaryInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(grossSalaryLabel)
                    .addComponent(grossSalaryText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(salaryInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(netSalaryLabel)
                    .addComponent(netSalaryText))
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cancelButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveButton))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(personalInformationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(employeeDetailsLabel, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(salaryInformationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(employeeDetailsLabel)
                .addGap(30, 30, 30)
                .addComponent(personalInformationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(salaryInformationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(saveButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        try {
            // Get values
            String username = usernameTextField.getText();
            String firstName = firstNameTextField.getText();
            String lastName = lastNameTextField.getText();
            String icNumber = icNumberTextField.getText();
            String employeeId = employeeIdTextField.getText();
            String jobPosition = jobPositionTextField.getText();
            String email = emailTextField.getText();
            int age = Integer.parseInt(ageTextField.getText());
            double allowance = Double.parseDouble(allowanceTextField.getText());
            double basicSalary = Double.parseDouble(basicSalaryTextField.getText());
            int month = deductionMonthComboBox.getSelectedIndex() + 1;
            double deductionAmount = Double.parseDouble(deductionTextField.getText());

            if (allowance < 0 || basicSalary < 0 || deductionAmount < 0) {
                JOptionPane.showMessageDialog(this, "Invalid input! Salary information cannot be less than 0.", "Invalid Input", JOptionPane.WARNING_MESSAGE);

                // Display salary information
                allowanceTextField.setText(Double.toString(employee.getAllowance()));
                basicSalaryTextField.setText(Double.toString(employee.getBasicSalary()));
                grossSalaryText.setText(Double.toString(employee.getGrossSalary()));
                netSalaryText.setText(Double.toString(employee.getNetSalary()));;
                incomeTaxPercentageText.setText(Double.toString(employee.getIncomeTax()));

                // Display monthly deduction information
                deductionTextField.setText(Double.toString(employee.getDeduction(month)));
            } else if (!isErrorShown) {
                // Save values into database
                hrInterface.updateEmployee(username, firstName, lastName, email, age);
                hrInterface.updateEmployeeJobInformation(username, icNumber, employeeId, jobPosition);
                hrInterface.updateEmployeeSalary(username, basicSalary, allowance);
                hrInterface.updateEmployeeDeduction(username, employeeId, month, deductionAmount);

                AdminPage adminPage = new AdminPage(hrInterface);
                adminPage.setAdminPageVisibility(true);
                dispose();
            }
        } catch (RemoteException ex) {
            Logger.getLogger(EmployeeDetailsPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        adminPage.setAdminPageVisibility(true);
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void deductionMonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deductionMonthComboBoxActionPerformed
        int selectedMonth = deductionMonthComboBox.getSelectedIndex() + 1;
        deductionTextField.setText(Double.toString(employee.getDeduction(selectedMonth)));
    }//GEN-LAST:event_deductionMonthComboBoxActionPerformed

    private void basicSalaryTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_basicSalaryTextFieldFocusLost
        try {
            // Get salary information
            double updatedBasicSalary = Double.parseDouble(basicSalaryTextField.getText());
            double updatedAllowance = Double.parseDouble(allowanceTextField.getText());
            double updatedGrossSalary = updatedBasicSalary + updatedAllowance;
            double deduction = Double.parseDouble(deductionTextField.getText());

            // Set salary information
            incomeTaxPercentageText.setText(Double.toString(hrInterface.getIncomeTaxPercentage(updatedBasicSalary) * 100) + "%");
            grossSalaryText.setText(Double.toString(updatedGrossSalary));
            netSalaryText.setText(Double.toString(hrInterface.calculateNetSalary(updatedBasicSalary, updatedAllowance, deduction)));
        } catch (NumberFormatException ex) {
            if (!isErrorShown) {
                isErrorShown = true;
                JOptionPane.showMessageDialog(this, "Invalid basic salary input! Please try again.", "Invalid Input", JOptionPane.WARNING_MESSAGE);
                basicSalaryTextField.setText(Double.toString(employee.getBasicSalary()));
                isErrorShown = false;
            }
        } catch (RemoteException ex) {
            Logger.getLogger(EmployeeDetailsPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_basicSalaryTextFieldFocusLost

    private void allowanceTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_allowanceTextFieldFocusLost
        try {
            // Get salary information
            double updatedBasicSalary = Double.parseDouble(basicSalaryTextField.getText());
            double updatedAllowance = Double.parseDouble(allowanceTextField.getText());
            double updatedGrossSalary = updatedBasicSalary + updatedAllowance;
            double deduction = Double.parseDouble(deductionTextField.getText());

            // Set salary information
            incomeTaxPercentageText.setText(Double.toString(hrInterface.getIncomeTaxPercentage(updatedBasicSalary) * 100) + "%");
            grossSalaryText.setText(Double.toString(updatedGrossSalary));
            netSalaryText.setText(Double.toString(hrInterface.calculateNetSalary(updatedBasicSalary, updatedAllowance, deduction)));
        } catch (NumberFormatException ex) {
            if (!isErrorShown) {
                isErrorShown = true;
                JOptionPane.showMessageDialog(this, "Invalid allowance input! Please try again.", "Invalid Input", JOptionPane.WARNING_MESSAGE);
                allowanceTextField.setText(Double.toString(employee.getAllowance()));
                isErrorShown = false;
            }
        } catch (RemoteException ex) {
            Logger.getLogger(EmployeeDetailsPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_allowanceTextFieldFocusLost

    private void deductionTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_deductionTextFieldFocusLost
        try {
            // Get salary information
            double updatedBasicSalary = Double.parseDouble(basicSalaryTextField.getText());
            double updatedAllowance = Double.parseDouble(allowanceTextField.getText());
            double updatedGrossSalary = updatedBasicSalary + updatedAllowance;
            double deduction = Double.parseDouble(deductionTextField.getText());

            // Set salary information
            incomeTaxPercentageText.setText(Double.toString(hrInterface.getIncomeTaxPercentage(updatedBasicSalary) * 100) + "%");
            grossSalaryText.setText(Double.toString(updatedGrossSalary));
            netSalaryText.setText(Double.toString(hrInterface.calculateNetSalary(updatedBasicSalary, updatedAllowance, deduction)));
        } catch (NumberFormatException ex) {
            if (!isErrorShown) {
                isErrorShown = true;
                JOptionPane.showMessageDialog(this, "Invalid deduction input! Please try again.", "Invalid Input", JOptionPane.WARNING_MESSAGE);
                Calendar calendar = Calendar.getInstance();
                int currentMonth = calendar.get(Calendar.MONTH) + 1;
                deductionTextField.setText(Double.toString(employee.getDeduction(currentMonth)));
                isErrorShown = false;
            }
        } catch (RemoteException ex) {
            Logger.getLogger(EmployeeDetailsPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deductionTextFieldFocusLost

    private void emailTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailTextFieldFocusLost
        String email = emailTextField.getText();

        if (email.isEmpty()) {
            isErrorShown = true;
            JOptionPane.showMessageDialog(this, "Email cannot be empty! Please try again", "Invalid Input", JOptionPane.WARNING_MESSAGE);
            emailTextField.setText(employee.getEmail());
            isErrorShown = false;
        } else if (!email.matches("^(.+)@(.+)$")) {
            isErrorShown = true;
            JOptionPane.showMessageDialog(this, "Invalid email input! Please try again.", "Invalid Input", JOptionPane.WARNING_MESSAGE);
            emailTextField.setText(employee.getEmail());
            isErrorShown = false;
        }
    }//GEN-LAST:event_emailTextFieldFocusLost

    private void ageTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ageTextFieldFocusLost
        try {
            int age = Integer.parseInt(ageTextField.getText());

            if (age < 0 || age > 150) {
                isErrorShown = true;
                JOptionPane.showMessageDialog(this, "Invalid age input! Please try again.", "Invalid Input", JOptionPane.WARNING_MESSAGE);
                ageTextField.setText(Integer.toString(employee.getAge()));
                isErrorShown = false;
            }
        } catch (NumberFormatException ex) {
            isErrorShown = true;
            JOptionPane.showMessageDialog(this, "Invalid age input! Please try again.", "Invalid Input", JOptionPane.WARNING_MESSAGE);
            ageTextField.setText(Integer.toString(employee.getAge()));
            isErrorShown = false;
        }
    }//GEN-LAST:event_ageTextFieldFocusLost

    private void firstNameTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_firstNameTextFieldFocusLost
        if (firstNameTextField.getText().isEmpty()) {
            isErrorShown = true;
            JOptionPane.showMessageDialog(this, "First name cannot be empty! Please try again", "Invalid Input", JOptionPane.WARNING_MESSAGE);
            firstNameTextField.setText(employee.getFirstName());
            isErrorShown = false;
        } else if (!firstNameTextField.getText().matches("^[a-zA-Z]+$")) {
            isErrorShown = true;
            JOptionPane.showMessageDialog(this, "First name can only have letters! Please try again", "Invalid Input", JOptionPane.WARNING_MESSAGE);
            firstNameTextField.setText(employee.getFirstName());
            isErrorShown = false;
        }
    }//GEN-LAST:event_firstNameTextFieldFocusLost

    private void icNumberTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_icNumberTextFieldFocusLost
        if (icNumberTextField.getText().isEmpty()) {
            isErrorShown = true;
            JOptionPane.showMessageDialog(this, "IC number cannot be empty! Please try again", "Invalid Input", JOptionPane.WARNING_MESSAGE);
            icNumberTextField.setText(employee.getIcNumber());
            isErrorShown = false;
        } else if (icNumberTextField.getText().matches("^[a-zA-Z]*$")) {
            isErrorShown = true;
            JOptionPane.showMessageDialog(this, "Invalid IC number input! Please try again", "Invalid Input", JOptionPane.WARNING_MESSAGE);
            icNumberTextField.setText(employee.getIcNumber());
            isErrorShown = false;
        }
    }//GEN-LAST:event_icNumberTextFieldFocusLost

    private void lastNameTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lastNameTextFieldFocusLost
        if (lastNameTextField.getText().isEmpty()) {
            isErrorShown = true;
            JOptionPane.showMessageDialog(this, "Last name cannot be empty! Please try again", "Invalid Input", JOptionPane.WARNING_MESSAGE);
            lastNameTextField.setText(employee.getLastName());
            isErrorShown = false;
        } else if (!lastNameTextField.getText().matches("^[a-zA-Z]+$")) {
            isErrorShown = true;
            JOptionPane.showMessageDialog(this, "Last name can only have letters! Please try again", "Invalid Input", JOptionPane.WARNING_MESSAGE);
            lastNameTextField.setText(employee.getLastName());
            isErrorShown = false;
        }
    }//GEN-LAST:event_lastNameTextFieldFocusLost

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ageLabel;
    private javax.swing.JTextField ageTextField;
    private javax.swing.JLabel allowanceLabel;
    private javax.swing.JFormattedTextField allowanceTextField;
    private javax.swing.JLabel basicSalaryLabel;
    private javax.swing.JFormattedTextField basicSalaryTextField;
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox<String> deductionMonthComboBox;
    private javax.swing.JTextField deductionTextField;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JLabel employeeDetailsLabel;
    private javax.swing.JLabel employeeIdLabel;
    private javax.swing.JTextField employeeIdTextField;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JTextField firstNameTextField;
    private javax.swing.JLabel grossSalaryLabel;
    private javax.swing.JLabel grossSalaryText;
    private javax.swing.JLabel icNumberLabel;
    private javax.swing.JTextField icNumberTextField;
    private javax.swing.JLabel incomeTaxPercentageLabel;
    private javax.swing.JLabel incomeTaxPercentageText;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jobPositionLabel;
    private javax.swing.JTextField jobPositionTextField;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JTextField lastNameTextField;
    private javax.swing.JLabel monthlyDeductionLabel;
    private javax.swing.JLabel netSalaryLabel;
    private javax.swing.JLabel netSalaryText;
    private javax.swing.JLabel personalInformationLabel;
    private javax.swing.JPanel personalInformationPanel;
    private javax.swing.JLabel salaryInformationLabel;
    private javax.swing.JPanel salaryInformationPanel;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField usernameTextField;
    // End of variables declaration//GEN-END:variables
}
